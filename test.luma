pub fn add(a: u32, b: u8) {
    a + b
}

pub fn sub(a: u8, b: u8): u64 = a - b;

pub fn test() {
    let result = 5;
    let result = add(result, 20) + sub(30, 15);

    if result > 10 {
        result = result - 10;
    } else {
        result = result + 10;
    }

    result
}

// let arg = "";
// if arg == "1" {
//     arg = "1a"
// }

// {
//     let arg: str = "";

//     // errors as it returns a type and no semi-colon therefore its a "scope" return type
//     if arg == "1" {
//         arg = "1a"
//     }

//     // no errors as it doesn't return a type therefore its a statement
//     if arg == "2" {
//         arg = "2a";
//     }

//     // no errors because semi-colon is optional as it doesnt return type
//     if arg == "3" {
//         arg = "3a";
//     };

//     // no errors because it returns a type but also has an else branch
//     if arg == "4" {
//         arg = "4a"
//     } else {
//         arg = "4b"
//     }

//     // no errors because it returns a type but also has an else branch
//     let res = if arg == "5" {
//         arg = "5a"
//     } else {
//         arg = "5b"
//     };

//     // errors as it returns a type and no semi-colon therefore its a "scope" return type
//     let res = if arg == "6" {
//         arg = "6a"
//     };

//     // no errors as it doesn't return a type therefore its a statement (type of res is Void)
//     let res = if arg == "7" {
//         arg = "7a";
//     };

//     // no errors because semi-colon is optional as it doesnt return type
//     let res = if arg == "8" {
//         arg = "8a"
//     } else {
//         arg = "8b"
//     }

//     let test = 5;
//     test == 5 // todo fix parser error regarding statements after implicit return
// };